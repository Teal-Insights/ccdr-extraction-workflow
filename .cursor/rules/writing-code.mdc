---
description: 
globs: *.tsx,*.ts,*.mjs,*.js,*.py,*.sql
alwaysApply: false
---
It's recommended that you follow these steps for writing code:

1. Create a markdown specification in the `artifacts` folder describing the inputs and outputs and how they fit into the project goals
2. Send the specification plan to a strong coding model using the `llm` CLI utility with instructions to output an actual implementation
3. Use your best judgement to review the implementation, make sure it's consistent with our goals, and apply it to files in the respository.

Remember to *never* hard-code secrets in scripts. Secrets may be written to `.env` and programmatically retrieved from there. Never use placeholder secrets, but feel free to request human intervention for generating and managing secrets if you find yourself unable to create and/or manage them yourself from the command line.

## Working with `llm`

Use the `llm` tool with the `-m` flag to specify `gemini-2.5-pro`:

```bash
cat llm "Review the following file and add the following desired features: Feature 1, Feature 2, Feature 3. ($cat script.py)" -m gemini-2.5-pro > artifacts/repo-summary.md
```